# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Role {
  roleName: String!
  roleId: String!
}

type Member {
  memberName: String!
  fullName: String!
  birthDate: Float!
  address: String!
  roles: [Role!]!
  memberId: String!
}

type Book {
  authorName: String!
  bookTitle: String!

  """Edition date in epoch milliseconds"""
  firstPublishedDate: Float!
  editionNumber: Int!

  """Edition date in epoch milliseconds"""
  editionDate: Float!
  availableCount: Int!
  reservedCount: Int!
  titleType: Int!
  coverType: Int!
  bookId: String!
}

type TotalAvailableCountsPerTitleEndEditionNumberResponseDto {
  bookTitle: String!
  editionNumber: Int!
  totalAvailableCount: Int!
}

type ActiveBookReservationsResponseDto {
  receivedDate: Float!
  availableAt: Float!
  memberId: String!
  bookId: String!
  getBookInfo: Book!
  getMemberInfo: Member!
}

type NumberOfBooksReservedByMembersResponseDto {
  activeBookReservationsCount: Int!
  fullName: String!
  memberName: String!
  address: String!
  birthDate: Float!
}

type ReservationHistoryResponseDto {
  receivedDate: Float!
  returnDate: Float!
  memberId: String!
  bookId: String!
  getBookInfo: Book!
  getMemberInfo: Member!
}

type TokenReponseDto {
  accessToken: String!
  refreshToken: String!
}

type Query {
  getMembersByMemberName(memberName: String!): Member!
  getMembersByMemberId(memberId: String!): Member!

  """this is fake query for custom error exception handling test."""
  customErrorExampleInBookService: Boolean!
  books: [Book!]!
  getNumberOfBooksPerTitleAndEditionNumber: [TotalAvailableCountsPerTitleEndEditionNumberResponseDto!]!
  getDistinctBookTitleNumber: Int!
  getAllActiveBookReservations(activeBookReservationsFilterInput: ActiveBookReservationsFilterInput!): [ActiveBookReservationsResponseDto!]!
  getNumberOfBooksReservedPerMembers: [NumberOfBooksReservedByMembersResponseDto!]!
  getReservedBooksEstimatedReturnDates(bookId: String!): [Float!]!
  getReservationHistoriesByBookId(bookId: String!): [ReservationHistoryResponseDto!]!
  getReservationHistoriesByMemberId(memberId: String!): [ReservationHistoryResponseDto!]!
}

input ActiveBookReservationsFilterInput {
  memberId: String
  bookId: String
}

type Mutation {
  register(registrationInput: RegistrationInput!): String!
  memberSelfUpdate(memberSelfUpdateInput: SelfUpdateInput!): Boolean!
  adminUpdateMember(adminUpdateInput: AdminUpdateInput!): Boolean!

  """returns registered book id"""
  createBook(registerBookInput: RegisterBookInput!): String!
  updateBook(updateBookInput: UpdateBookInput!): Boolean!

  """Check with book id if there is available book"""
  checkIfAnyAvailableBooks(id: String!): Boolean!

  """Soft delete operation for book records"""
  removeBook(id: String!): Boolean!
  assignBookToMember(assigningBookInput: AssigningBookInput!): Boolean!
  unAssignBookToMember(assigningBookInput: AssigningBookInput!): Boolean!
  login(loginInput: LoginInput!): TokenReponseDto!
  refrehLogin(tokenKey: String!): TokenReponseDto!
  logout(tokenKey: String!): Boolean!
}

input RegistrationInput {
  memberName: String!
  fullName: String!

  """Birth date in epoch milliseconds"""
  birthDate: Float!
  address: String!
  password: String!
}

"""contains member update info"""
input SelfUpdateInput {
  fullName: String!

  """Birth date in epoch milliseconds"""
  birthDate: Float!
  address: String!
}

"""contains member update info"""
input AdminUpdateInput {
  memberName: String!
  fullName: String!

  """Birth date in epoch milliseconds"""
  birthDate: Float!
  address: String!
}

input RegisterBookInput {
  authorName: String!
  bookTitle: String!

  """Publish date in epoch milliseconds"""
  firstPublishDate: Float!
  editionNumber: Int!

  """Edition date in epoch milliseconds"""
  editionDate: Float!
  titleType: Int!
  coverType: Int!
  availableCount: Int!
}

input UpdateBookInput {
  authorName: String
  bookTitle: String

  """Publish date in epoch milliseconds"""
  firstPublishDate: Float
  editionNumber: Int

  """Edition date in epoch milliseconds"""
  editionDate: Float
  titleType: Int
  coverType: Int
  availableCount: Int
  id: String!
}

input AssigningBookInput {
  bookId: String!
  memberId: String!
}

input LoginInput {
  memberName: String!
  password: String!
}